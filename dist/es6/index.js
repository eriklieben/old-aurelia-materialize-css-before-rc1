import "@eriklieben/materialize-css";
import * as materialConfig from "./config";
export class MaterializeCssOptions {
    constructor() {
        this.enableAttributes = true;
        this.enableElements = true;
        this.attributeFilter = undefined;
        this.elementFilter = undefined;
        this.configuration = new materialConfig.Configuration();
    }
}
export function configure(config, options) {
    options = Object.assign(new MaterializeCssOptions(), options);
    materialConfig.config = options.configuration;
    let attributes = [
        "./javascript/collapsible/collapsibleAttribute",
        "./javascript/collapsible/collapsibleBodyAttribute",
        "./javascript/collapsible/collapsibleHeaderAttribute",
        "./javascript/dropdown/dropdownAttribute",
        "./javascript/dropdown/dropdownDividerAttribute",
        "./javascript/media/boxedAttribute",
        "./javascript/modals/modalTriggerAttribute",
        "./javascript/pushpin/pushpinAttribute",
    ];
    let elements = [
        "./javascript/collapsible/collapsibleElement",
        "./javascript/collapsible/collapsibleBodyElement",
        "./javascript/collapsible/collapsibleHeaderElement",
        "./javascript/collapsible/collapsibleItemElement",
        "./javascript/dropdown/dropdownElement",
        "./javascript/dropdown/dropdownDividerElement",
        "./javascript/dropdown/dropdownItemElement",
        "./javascript/media/slideElement",
        "./javascript/media/sliderElement",
        "./javascript/modals/modalContentElement",
        "./javascript/modals/modalElement",
        "./javascript/modals/modalFooterElement",
        "./javascript/pushpin/pushpinElement",
    ];
    if (options.attributeFilter) {
        attributes = attributes.filter(options.attributeFilter);
    }
    if (options.elementFilter) {
        elements = elements.filter(options.elementFilter);
    }
    if (options.enableAttributes) {
        config.globalResources(attributes);
    }
    if (options.enableElements) {
        config.globalResources(elements);
    }
}
export default MaterializeCssOptions;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJPQUFPLDZCQUE2QjtPQUU3QixLQUFLLGNBQWMsTUFBTSxVQUFVO0FBRTFDO0lBQUE7UUFDVyxxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDeEIsbUJBQWMsR0FBRyxJQUFJLENBQUM7UUFFdEIsb0JBQWUsR0FBK0QsU0FBUyxDQUFDO1FBQ3hGLGtCQUFhLEdBQStELFNBQVMsQ0FBQztRQUV0RixrQkFBYSxHQUFHLElBQUksY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzlELENBQUM7QUFBRCxDQUFDO0FBRUQsMEJBQTBCLE1BQThCLEVBQUUsT0FBOEI7SUFFcEYsT0FBTyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxxQkFBcUIsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzlELGNBQWMsQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztJQUU5QyxJQUFJLFVBQVUsR0FBRztRQUNiLCtDQUErQztRQUMvQyxtREFBbUQ7UUFDbkQscURBQXFEO1FBRXJELHlDQUF5QztRQUN6QyxnREFBZ0Q7UUFFaEQsbUNBQW1DO1FBRW5DLDJDQUEyQztRQUUzQyx1Q0FBdUM7S0FDMUMsQ0FBQztJQUVGLElBQUksUUFBUSxHQUFHO1FBQ1gsNkNBQTZDO1FBQzdDLGlEQUFpRDtRQUNqRCxtREFBbUQ7UUFDbkQsaURBQWlEO1FBRWpELHVDQUF1QztRQUN2Qyw4Q0FBOEM7UUFDOUMsMkNBQTJDO1FBRTNDLGlDQUFpQztRQUNqQyxrQ0FBa0M7UUFFbEMseUNBQXlDO1FBQ3pDLGtDQUFrQztRQUNsQyx3Q0FBd0M7UUFFeEMscUNBQXFDO0tBQ3hDLENBQUM7SUFHRixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUMxQixVQUFVLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLFFBQVEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBR0QsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUMzQixNQUFNLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztRQUN6QixNQUFNLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7QUFDTCxDQUFDO0FBRUQsZUFBZSxxQkFBcUIsQ0FBQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIkBlcmlrbGllYmVuL21hdGVyaWFsaXplLWNzc1wiO1xyXG5pbXBvcnQgeyBGcmFtZXdvcmtDb25maWd1cmF0aW9uIH0gZnJvbSBcImF1cmVsaWEtZnJhbWV3b3JrXCI7XHJcbmltcG9ydCAqIGFzIG1hdGVyaWFsQ29uZmlnIGZyb20gXCIuL2NvbmZpZ1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1hdGVyaWFsaXplQ3NzT3B0aW9ucyB7XHJcbiAgICBwdWJsaWMgZW5hYmxlQXR0cmlidXRlcyA9IHRydWU7XHJcbiAgICBwdWJsaWMgZW5hYmxlRWxlbWVudHMgPSB0cnVlO1xyXG5cclxuICAgIHB1YmxpYyBhdHRyaWJ1dGVGaWx0ZXI6ICh2YWx1ZTogc3RyaW5nLCBpbmRleDogbnVtYmVyLCBhcnJheTogc3RyaW5nW10pID0+IGJvb2xlYW4gPSB1bmRlZmluZWQ7XHJcbiAgICBwdWJsaWMgZWxlbWVudEZpbHRlcjogKHZhbHVlOiBzdHJpbmcsIGluZGV4OiBudW1iZXIsIGFycmF5OiBzdHJpbmdbXSkgPT4gYm9vbGVhbiA9IHVuZGVmaW5lZDtcclxuXHJcbiAgICBwdWJsaWMgY29uZmlndXJhdGlvbiA9IG5ldyBtYXRlcmlhbENvbmZpZy5Db25maWd1cmF0aW9uKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmUoY29uZmlnOiBGcmFtZXdvcmtDb25maWd1cmF0aW9uLCBvcHRpb25zOiBNYXRlcmlhbGl6ZUNzc09wdGlvbnMpIHtcclxuXHJcbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbihuZXcgTWF0ZXJpYWxpemVDc3NPcHRpb25zKCksIG9wdGlvbnMpO1xyXG4gICAgbWF0ZXJpYWxDb25maWcuY29uZmlnID0gb3B0aW9ucy5jb25maWd1cmF0aW9uO1xyXG5cclxuICAgIGxldCBhdHRyaWJ1dGVzID0gW1xyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L2NvbGxhcHNpYmxlL2NvbGxhcHNpYmxlQXR0cmlidXRlXCIsXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvY29sbGFwc2libGUvY29sbGFwc2libGVCb2R5QXR0cmlidXRlXCIsXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvY29sbGFwc2libGUvY29sbGFwc2libGVIZWFkZXJBdHRyaWJ1dGVcIixcclxuXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvZHJvcGRvd24vZHJvcGRvd25BdHRyaWJ1dGVcIixcclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9kcm9wZG93bi9kcm9wZG93bkRpdmlkZXJBdHRyaWJ1dGVcIixcclxuXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvbWVkaWEvYm94ZWRBdHRyaWJ1dGVcIixcclxuXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvbW9kYWxzL21vZGFsVHJpZ2dlckF0dHJpYnV0ZVwiLFxyXG5cclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9wdXNocGluL3B1c2hwaW5BdHRyaWJ1dGVcIixcclxuICAgIF07XHJcblxyXG4gICAgbGV0IGVsZW1lbnRzID0gW1xyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L2NvbGxhcHNpYmxlL2NvbGxhcHNpYmxlRWxlbWVudFwiLFxyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L2NvbGxhcHNpYmxlL2NvbGxhcHNpYmxlQm9keUVsZW1lbnRcIixcclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9jb2xsYXBzaWJsZS9jb2xsYXBzaWJsZUhlYWRlckVsZW1lbnRcIixcclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9jb2xsYXBzaWJsZS9jb2xsYXBzaWJsZUl0ZW1FbGVtZW50XCIsXHJcblxyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L2Ryb3Bkb3duL2Ryb3Bkb3duRWxlbWVudFwiLFxyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L2Ryb3Bkb3duL2Ryb3Bkb3duRGl2aWRlckVsZW1lbnRcIixcclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9kcm9wZG93bi9kcm9wZG93bkl0ZW1FbGVtZW50XCIsXHJcblxyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L21lZGlhL3NsaWRlRWxlbWVudFwiLFxyXG4gICAgICAgIFwiLi9qYXZhc2NyaXB0L21lZGlhL3NsaWRlckVsZW1lbnRcIixcclxuXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvbW9kYWxzL21vZGFsQ29udGVudEVsZW1lbnRcIixcclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9tb2RhbHMvbW9kYWxFbGVtZW50XCIsXHJcbiAgICAgICAgXCIuL2phdmFzY3JpcHQvbW9kYWxzL21vZGFsRm9vdGVyRWxlbWVudFwiLFxyXG5cclxuICAgICAgICBcIi4vamF2YXNjcmlwdC9wdXNocGluL3B1c2hwaW5FbGVtZW50XCIsXHJcbiAgICBdO1xyXG5cclxuICAgIC8vIEZpbHRlciBvdXQgYXR0cmlidXRlcyBhbmQgZWxlbWVudHNcclxuICAgIGlmIChvcHRpb25zLmF0dHJpYnV0ZUZpbHRlcikge1xyXG4gICAgICAgIGF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzLmZpbHRlcihvcHRpb25zLmF0dHJpYnV0ZUZpbHRlcik7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuZWxlbWVudEZpbHRlcikge1xyXG4gICAgICAgIGVsZW1lbnRzID0gZWxlbWVudHMuZmlsdGVyKG9wdGlvbnMuZWxlbWVudEZpbHRlcik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT25seSBsb2FkIGF0dHJpYnV0ZXMgJiBlbGVtZW50cyBpZiB0aGV5IGFyZSBlbmFibGVkXHJcbiAgICBpZiAob3B0aW9ucy5lbmFibGVBdHRyaWJ1dGVzKSB7XHJcbiAgICAgICAgY29uZmlnLmdsb2JhbFJlc291cmNlcyhhdHRyaWJ1dGVzKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAob3B0aW9ucy5lbmFibGVFbGVtZW50cykge1xyXG4gICAgICAgIGNvbmZpZy5nbG9iYWxSZXNvdXJjZXMoZWxlbWVudHMpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNYXRlcmlhbGl6ZUNzc09wdGlvbnM7XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
